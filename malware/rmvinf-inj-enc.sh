#!/bin/bash

source /home/sample/scripts/dataset.sh

input=$1

function check_input() {
	username=$(cat /etc/trueuserowners | awk '{print $1}' | sed 's/://' | awk -v user=$input '{if ($1==user) print $1}')

	if [[ $input == "$username" ]]; then
		infected_list

		rmv_infected
	else
		echo "Username not found"
	fi
}

function infected_list() {
	grep -rnw /home/$username/public_html -e "<?php require base64_decode(" >>$temp/$username-inf-inj_$time.txt
}

function rmv_infected() {
	if [ -r $temp/$username-inf-inj_$time.txt ] && [ -s $temp/$username-inf-inj_$time.txt ]; then

		while IFS= read -r line || [[ -n "$line" ]]; do
			file=$(echo "$line" | cut -d":" -f1)
			num=$(echo "$line" | cut -d":" -f2)

			last=$(sed -n '$=' "$file")

			sed -i "${num}d" "$file"

			nlast=$(sed -n '$=' "$file")

			if [[ $nlast -lt $last ]]; then
				echo "Modified - $num - $file" >>$svrlogs/malware/$username-inf-inj_$time.txt
			else
				echo "Not Modified - $num - $file" >>$svrlogs/malware/$username-inf-inj_$time.txt
			fi

		done <"$temp/$username-inf-inj_$time.txt"

		incfile=$(cat $temp/$username-inf-inj_$time.txt | cut -d'"' -f2 | sort | uniq)

		while IFS= read -r enfile; do
			defile=$(echo "$enfile" | base64 -di)

			file=$(find /home/$username/public_html -type f -name "$defile")

			rm -f "$file"

			if [[ ! -f "$file" ]]; then
				echo "Removed - $enfile - $defile - $file" >>$svrlogs/malware/$username-inf-inj_$time.txt
			else
				echo "Not Removed - $enfile - $defile - $file" >>$svrlogs/malware/$username-inf-inj_$time.txt
			fi

		done <<<"$incfile"

	fi
}

check_input
